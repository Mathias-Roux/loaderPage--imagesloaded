@import "https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap";
*, :after, :before {
  box-sizing: border-box;
}

body {
  width: 100vw;
  height: 100vh;
  -webkit-font-smoothing: antialised;
  -moz-osx-font-smoothing: grayscale;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  user-select: none;
  -khtml-user-select: none;
  background-color: gray;
  justify-content: center;
  align-items: center;
  margin: 0;
  padding: 0;
  font-family: Abril Fatface, cursive;
  display: flex;
  position: relative;
  overflow: hidden;
}

.noise {
  z-index: -1000;
  width: 100%;
  height: 100%;
  opacity: .05;
  position: absolute;
  top: 0;
  left: 0;
}

.js .loading:before, .js .loading:after {
  content: "";
  z-index: 1001;
  position: fixed;
}

.js .loading:before {
  width: 100%;
  height: 100%;
  background: green;
  top: 0;
  left: 0;
}

.js .loading:after {
  width: 60px;
  height: 60px;
  opacity: .4;
  background: #ff0;
  border-radius: 50%;
  margin: -30px 0 0 -30px;
  animation: loaderAnim .7s linear infinite alternate forwards;
  top: 50%;
  left: 50%;
}

@keyframes loaderAnim {
  to {
    opacity: 1;
    transform: scale3d(.5, .5, 1);
  }
}

.titleWrap {
  z-index: 1000;
  position: relative;
}

.titleWrap h1 {
  width: 100%;
  text-align: center;
  isolation: isolate;
}

.titleWrap h1 span {
  color: #ff0;
  text-transform: uppercase;
  font-size: 20vw;
  font-weight: normal;
  display: block;
}

.titleWrap h1 span:last-child {
  text-transform: none;
  letter-spacing: 5px;
  color: #ff0;
  mix-blend-mode: difference;
  font-size: 4vw;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translateX(33%);
}

.image {
  width: 200px;
  height: 300px;
  background-position: 50%;
  background-size: cover;
}

.image:hover {
  cursor: pointer;
}

.one {
  position: absolute;
  top: 1%;
  left: 1vw;
}

.two {
  position: absolute;
  top: 80%;
  left: 1vw;
}

.three {
  position: absolute;
  top: 20%;
  left: 50vw;
}

.four {
  position: absolute;
  top: 70%;
  left: 40vw;
}

.five {
  position: absolute;
  top: 3%;
  left: 80vw;
}

.splitting .word, .splitting .char {
  display: inline-block;
}

.splitting .char {
  position: relative;
}

.splitting .char:before, .splitting .char:after {
  content: attr(data-char);
  visibility: hidden;
  -webkit-user-select: none;
  user-select: none;
  transition: inherit;
  position: absolute;
  top: 0;
  left: 0;
}

.splitting {
  --word-center: calc((var(--word-total)  - 1) / 2);
  --char-center: calc((var(--char-total)  - 1) / 2);
  --line-center: calc((var(--line-total)  - 1) / 2);
}

.splitting .word {
  --word-percent: calc(var(--word-index) / var(--word-total) );
  --line-percent: calc(var(--line-index) / var(--line-total) );
}

.splitting .char {
  --char-percent: calc(var(--char-index) / var(--char-total) );
  --char-offset: calc(var(--char-index)  - var(--char-center) );
  --distance: calc( (var(--char-offset) * var(--char-offset) ) / var(--char-center) );
  --distance-sine: calc(var(--char-offset) / var(--char-center) );
  --distance-percent: calc((var(--distance) / var(--char-center) ) );
}

.splitting.cells img {
  width: 100%;
  display: block;
}

@supports ( display: grid ) {
  .splitting.cells {
    visibility: hidden;
    background-size: cover;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-grid {
    background: inherit;
    width: 100%;
    height: 100%;
    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );
    display: grid;
    position: absolute;
    top: 0;
    left: 0;
  }

  .splitting .cell {
    background: inherit;
    position: relative;
    overflow: hidden;
  }

  .splitting .cell-inner {
    background: inherit;
    visibility: visible;
    width: calc(100% * var(--col-total) );
    height: calc(100% * var(--row-total) );
    left: calc(-100% * var(--col-index) );
    top: calc(-100% * var(--row-index) );
    position: absolute;
  }

  .splitting .cell {
    --center-x: calc((var(--col-total)  - 1) / 2);
    --center-y: calc((var(--row-total)  - 1) / 2);
    --offset-x: calc(var(--col-index)  - var(--center-x) );
    --offset-y: calc(var(--row-index)  - var(--center-y) );
    --distance-x: calc( (var(--offset-x) * var(--offset-x) ) / var(--center-x) );
    --distance-y: calc( (var(--offset-y) * var(--offset-y) ) / var(--center-y) );
  }
}

/*# sourceMappingURL=index.ebeadb08.css.map */
