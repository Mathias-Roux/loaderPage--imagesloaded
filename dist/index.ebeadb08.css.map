{"mappings":";AAEA;;;;AAIA;;;;;;;;;;;;;;;;;;;;AAsBA;;;;;;;;;;AAWA;;;;;;AAOA;;;;;;;;AAQA;;;;;;;;;;;;AAYA;;;;;;;AAOA;;;;;AAKA;;;;;;AAMA;;;;;;;;AAQA;;;;;;;;;;;;AAYA;;;;;;;AAOA;;;;AAGA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;AACA;;;;;;ACrHA;;;;AAMA;;;;AASA;;;;;;;;;;;AAaA;;;;;;AAWA;;;;;AAQA;;;;;;;;AChDA;;;;;AAEA;EACE;;;;;;;EAOA;;;;;;;;;;;EAWA;;;;;;EAMA;;;;;;;;;;EAaA","sources":["src/styles/index.css","node_modules/splitting/dist/splitting.css","node_modules/splitting/dist/splitting-cells.css"],"sourcesContent":["@import url('https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap');\n\n*, ::after, ::before {\n\tbox-sizing: border-box;\n}\n\nbody{\n\tmargin: 0;\n\tpadding: 0;\n\twidth: 100vw;\n\theight: 100vh;\n\tfont-family: 'Abril Fatface', cursive;\n\t-webkit-font-smoothing: antialised;\n\t-moz-osx-font-smoothing: grayscale;\n\tbackground-color: grey;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\tposition: relative;\n\toverflow: hidden;\n\t-webkit-touch-callout: none; /* iOS Safari */\n    -webkit-user-select: none; /* Safari */\n    -khtml-user-select: none; /* Konqueror HTML */\n    -moz-user-select: none; /* Old versions of Firefox */\n    -ms-user-select: none; /* Internet Explorer/Edge */\n    user-select: none;\n}\n\n.noise{\n\tz-index: -1000;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\topacity: .05;\n}\n\n/* Page loader  */\n.js .loading::before,\n.js .loading::after {\n\tcontent: '';\n\tposition: fixed;\n\tz-index: 1001;\n}\n\n.js .loading::before {\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground: green;\n}\n\n.js .loading::after {\n\ttop: 50%;\n\tleft: 50%;\n\twidth: 60px;\n\theight: 60px;\n\tmargin: -30px 0 0 -30px;\n\tborder-radius: 50%;\n\topacity: 0.4;\n\tbackground: yellow;\n\tanimation: loaderAnim 0.7s linear infinite alternate forwards;\n}\n\n@keyframes loaderAnim {\n\tto {\n\t\topacity: 1;\n\t\ttransform: scale3d(0.5, 0.5, 1);\n\t}\n}\n\n.titleWrap{\n\tposition: relative;\n\tz-index: 1000;\n}\n\n.titleWrap h1 {\n\twidth: 100%;\n\ttext-align: center;\n\tisolation: isolate;\n}\n\n.titleWrap h1 span {\n\tdisplay: block;\n\tcolor: yellow;\n\tfont-size: 20vw;\n\tfont-weight: normal;\n\ttext-transform: uppercase;\n}\n\n.titleWrap h1 span:last-child {\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translateX(33%);\n\ttext-transform: none;\n\tfont-size: 4vw;\n\tletter-spacing: 5px;\n\tcolor: yellow;\n\tmix-blend-mode: difference;\n}\n\n.image{\n\tbackground-size: cover;\n\tbackground-position: 50% 50%;\n\twidth: 200px;\n\theight: 300px;\n}\n\n.image:hover{cursor: pointer;}\n\n\n.one{position: absolute; top: 1%; left: 1vw;}\n.two{position: absolute; top: 80%; left: 1vw;}\n.three{position: absolute; top: 20%; left: 50vw;}\n.four{position: absolute; top: 70%; left: 40vw;}\n.five{position: absolute; top: 3%; left: 80vw;}\n\n\n","/* Recommended styles for Splitting */\n.splitting .word,\n.splitting .char {\n  display: inline-block;\n}\n\n/* Psuedo-element chars */\n.splitting .char {\n  position: relative;\n}\n\n/**\n * Populate the psuedo elements with the character to allow for expanded effects\n * Set to `display: none` by default; just add `display: block` when you want\n * to use the psuedo elements\n */\n.splitting .char::before,\n.splitting .char::after {\n  content: attr(data-char);\n  position: absolute;\n  top: 0;\n  left: 0;\n  visibility: hidden;\n  transition: inherit;\n  user-select: none;\n}\n\n/* Expanded CSS Variables */\n\n.splitting {\n  /* The center word index */\n  --word-center: calc((var(--word-total) - 1) / 2);\n\n  /* The center character index */\n  --char-center: calc((var(--char-total) - 1) / 2);\n\n  /* The center character index */\n  --line-center: calc((var(--line-total) - 1) / 2);\n}\n\n.splitting .word {\n  /* Pecent (0-1) of the word's position */\n  --word-percent: calc(var(--word-index) / var(--word-total));\n\n  /* Pecent (0-1) of the line's position */\n  --line-percent: calc(var(--line-index) / var(--line-total));\n}\n\n.splitting .char {\n  /* Percent (0-1) of the char's position */\n  --char-percent: calc(var(--char-index) / var(--char-total));\n\n  /* Offset from center, positive & negative */\n  --char-offset: calc(var(--char-index) - var(--char-center));\n\n  /* Absolute distance from center, only positive */\n  --distance: calc(\n     (var(--char-offset) * var(--char-offset)) / var(--char-center)\n  );\n\n  /* Distance from center where -1 is the far left, 0 is center, 1 is far right */\n  --distance-sine: calc(var(--char-offset) / var(--char-center));\n\n  /* Distance from center where 1 is far left/far right, 0 is center */\n  --distance-percent: calc((var(--distance) / var(--char-center)));\n}\n",".splitting.cells img { width: 100%; display: block; }\n\n@supports ( display: grid ) {\n  .splitting.cells {\n    position: relative;\n    overflow: hidden;\n    background-size: cover;\n    visibility: hidden;\n  }\n\n  .splitting .cell-grid {\n    background: inherit;\n    position: absolute;\n    top: 0; \n    left: 0; \n    width: 100%; \n    height: 100%;\n    display: grid;\n    grid-template: repeat( var(--row-total), 1fr ) / repeat( var(--col-total), 1fr );\n  }\n\n  .splitting .cell {\n    background: inherit;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .splitting .cell-inner {\n    background: inherit;\n    position: absolute;\n    visibility: visible;\n    /* Size to fit the whole container size */\n    width: calc(100% * var(--col-total));\n    height: calc(100% * var(--row-total));\n    /* Position properly */\n    left: calc(-100% * var(--col-index));\n    top: calc(-100% * var(--row-index));\n  }\n\n  /* Helper variables for advanced effects */\n  .splitting .cell {\n    --center-x: calc((var(--col-total) - 1) / 2);\n    --center-y: calc((var(--row-total) - 1) / 2);\n\n    /* Offset from center, positive & negative */\n    --offset-x: calc(var(--col-index) - var(--center-x));\n    --offset-y: calc(var(--row-index) - var(--center-y));\n\n    /* Absolute distance from center, only positive */\n    --distance-x: calc( (var(--offset-x) * var(--offset-x)) / var(--center-x) );\n\n    /* Absolute distance from center, only positive */\n    --distance-y: calc( (var(--offset-y) * var(--offset-y)) / var(--center-y) );\n  }\n}\n\n"],"names":[],"version":3,"file":"index.ebeadb08.css.map","sourceRoot":"/__parcel_source_root/"}